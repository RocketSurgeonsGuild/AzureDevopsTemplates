parameters:
  Script: 'cakefile.cake'
  Target: 'Default'
  Configuration: 'Release'
  Coverage: '$(Agent.BuildDirectory)/c'
  Artifacts: $(Build.ArtifactStagingDirectory)
  Verbosity: 'Normal'
  PrivateBuild: false

steps:
- ${{ if eq(parameters.PrivateBuild, false) }}:
  - task: DotNetCoreCLI@2
    displayName: 'dotnet cake bootstrap'
    inputs:
      command: custom
      custom: cake
      arguments: ${{ format('{0} --bootstrap', parameters.Script) }}

  - task: DotNetCoreCLI@2
    displayName: 'dotnet cake'
    inputs:
      command: custom
      custom: cake
      arguments: ${{ format('{0} --Target="{1}" --Configuration="$(Configuration)" --Artifacts="$(Artifacts)" --Coverage="$(Coverage)" --verbosity="$(Verbosity)"', parameters.Script, parameters.Target) }}
    env:
      Configuration: ${{ parameters.Configuration }}
      Artifacts: ${{ parameters.Artifacts }}
      VstsArtifacts: ${{ parameters.Artifacts }}
      Coverage: ${{ parameters.Coverage }}
      VstsCoverage: ${{ parameters.Coverage }}
      Verbosity: ${{ parameters.Verbosity }}

- ${{ if eq(parameters.PrivateBuild, true) }}:
  - script: ${{ format('$(Agent.BuildDirectory)/t/c/$(CakeVersion)/dotnet-cake {0} --bootstrap', parameters.Script) }}
    displayName: 'dotnet cake bootstrap'

  - script: ${{ format('$(Agent.BuildDirectory)/t/c/$(CakeVersion)/dotnet-cake {0} --Target="{1}" --Configuration="$(Configuration)" --Artifacts="$(Artifacts)" --Coverage="$(Coverage)" --verbosity="$(Verbosity)"', parameters.Script, parameters.Target) }}
    displayName: 'dotnet cake'
    env:
      Configuration: ${{ parameters.Configuration }}
      Artifacts: ${{ parameters.Artifacts }}
      VstsArtifacts: ${{ parameters.Artifacts }}
      Coverage: ${{ parameters.Coverage }}
      VstsCoverage: ${{ parameters.Coverage }}
      Verbosity: ${{ parameters.Verbosity }}
