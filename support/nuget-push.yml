parameters:
  NuGetVersion: "5.4.0"
  Artifacts: "$(Pipeline.Workspace)"
  AllowPackageConflicts: "true"
  MyGetFeed: "myget.org"
  MyGetPackages: false
  NuGetFeed: "nuget.org"
  GitHubFeed: "github.nuget"
  GitHubPackages: false

steps:
  - task: NuGetToolInstaller@1
    displayName: "Get NuGet"
    inputs:
      versionSpec: ${{ parameters.NuGetVersion }}

  - ${{ if startsWith(variables['Build.SourceBranch'], 'refs/tags/v') }}:
      - task: NuGetCommand@2
        displayName: Push NuGet packages to ${{ parameters.NuGetFeed }}
        continueOnError: true
        inputs:
          command: push
          nuGetFeedType: external
          packagesToPush: "${{ parameters.Artifacts }}/**/*.nupkg;!${{ parameters.Artifacts }}/**/*.symbols.nupkg"
          publishFeedCredentials: ${{ parameters.NuGetFeed }}
          allowPackageConflicts: ${{ parameters.AllowPackageConflicts }}

  - ${{ if or(startsWith(variables['Build.SourceBranch'], 'refs/tags/v'), eq(variables['Build.SourceBranch'], 'refs/heads/master')) }}:
      - ${{ if eq(parameters.MyGetPackages, 'true') }}:
        - task: NuGetCommand@2
          displayName: Push NuGet packages to ${{ parameters.MyGetFeed }}
          continueOnError: true
          inputs:
            command: push
            nuGetFeedType: external
            packagesToPush: "${{ parameters.Artifacts }}/**/*.nupkg;!${{ parameters.Artifacts }}/**/*.symbols.nupkg"
            publishFeedCredentials: ${{ parameters.MyGetFeed }}
            allowPackageConflicts: ${{ parameters.AllowPackageConflicts }}

      - ${{ if eq(parameters.GitHubPackages, 'true') }}:
          - task: NuGetCommand@2
            displayName: Push NuGet packages to ${{ parameters.GitHubFeed }}
            continueOnError: true
            inputs:
              command: push
              nuGetFeedType: external
              packagesToPush: "${{ parameters.Artifacts }}/**/*.nupkg;!${{ parameters.Artifacts }}/**/*.symbols.nupkg"
              publishFeedCredentials: ${{ parameters.GitHubFeed }}
              allowPackageConflicts: ${{ parameters.AllowPackageConflicts }}
