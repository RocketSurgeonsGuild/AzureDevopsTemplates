parameters:
  Configuration: Release
  Verbosity: Normal
  DotNetSdk:
    - "2.2.x"
    - "3.0.x"
  NuGetVersion: "5.2.0"
  BranchNameFix: false
  Script: "cakefile.cake"
  Target: "Default"
  GitHub: false
  GitHubPackages: false
  GithubAuthVariableGroup: ""
jobs:
  - job: GitVersion
    pool:
      vmImage: windows-latest
    steps:
      - template: ../gitversion/store.yml
        parameters:
          NuGetVersion: ${{ parameters.NuGetVersion }}
          BranchNameFix: ${{ parameters.BranchNameFix }}

  - template: ./cake-job.yml
    parameters:
      name: "Build"
      dependsOn:
        - GitVersion
        - ${{ if startsWith(variables['Build.SourceBranch'], 'refs/tags/v') }}:
            - GitHub_Draft_Release
      Configuration: ${{ parameters.Configuration }}
      Verbosity: ${{ parameters.Verbosity }}
      DotNetSdk: ${{ parameters.DotNetSdk }}
      NuGetVersion: ${{ parameters.NuGetVersion }}
      Script: ${{ parameters.Script }}
      Target: ${{ parameters.Target }}

  - ${{ if ne(variables['System.PullRequest.IsFork'], 'true') }}:
      - job: GitHub_Draft_Release
        displayName: "GitHub Draft Release"
        pool:
          vmImage: "windows-latest"
        dependsOn:
          - GitVersion
        variables:
          - group: ${{ parameters.GithubAuthVariableGroup }}
        steps:
          # - checkout: none
          - template: ../gitversion/restore.yml
          - ${{ if eq(parameters.GitHub, 'true') }}:
              - template: ../standard/github-draft-release.yml
                parameters:
                  DotNetSdk: ${{ parameters.DotNetSdk }}

      - job: Publish_NuGet_Packages
        displayName: "Publish NuGet Packages"
        pool:
          vmImage: "windows-latest"
        dependsOn:
          - Build
          - GitHub_Draft_Release
        steps:
          # - checkout: none
          - download: current
            displayName: "Download NuGet Packages"
            artifact: "Nupkg - Windows"
          - template: ../standard/nuget-push.yml
            parameters:
              Artifacts: "$(Pipeline.Workspace)/Nupkg - Windows/"
              NuGetVersion: ${{ parameters.NuGetVersion }}
              Verbosity: ${{ parameters.Verbosity }}
              GitHubPackages: ${{ parameters.GitHubPackages }}

      - job: GitHub_Release
        displayName: "GitHub Release"
        pool:
          vmImage: "windows-latest"
        dependsOn:
          - Build
          - GitHub_Draft_Release
        variables:
          - group: ${{ parameters.GithubAuthVariableGroup }}
        steps:
          # - checkout: none
          - template: ../gitversion/restore.yml
          - ${{ if eq(parameters.GitHub, 'true') }}:
              - template: ../standard/github-release.yml
                parameters:
                  DotNetSdk: ${{ parameters.DotNetSdk }}
