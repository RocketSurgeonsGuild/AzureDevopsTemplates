parameters:
  Configuration: Release
  Verbosity: Normal
  DotNetSdk:
    - 2.2.x
    - 3.1.x
  NuGetVersion: "5.4.0"
  BranchNameFix: true
  Target: "Default"
  EnableReleaseNotes: true
  GitHub: false
  GitHubPackages: false
  GitHubAuthVariableGroup: ""
  MyGetPackages: false
  AuthNuGetFeeds: []
  NuGetConfig: 'NuGet.config'
  PublishNuGetPackages: 'Windows'
  Matrix:
    Windows:
      BuildName: "Windows"
      ImageName: "windows-latest"
    Linux:
      BuildName: "Linux"
      ImageName: "ubuntu-latest"
    macOS:
      BuildName: "macOS"
      ImageName: "macOS-latest"
jobs:
  - job: GitVersion
    pool:
      vmImage: windows-latest
    steps:
      - template: ../support/gitversion-store.yml
        parameters:
          BranchNameFix: ${{ parameters.BranchNameFix }}

  - template: ../jobs/publish-release.yml
    parameters:
      EnableReleaseNotes: ${{ parameters.EnableReleaseNotes }}
      GitHub: ${{ parameters.GitHub }}
      GitHubPackages: ${{ parameters.GitHubPackages }}
      GitHubAuthVariableGroup: ${{ parameters.GitHubAuthVariableGroup }}
      MyGetPackages: ${{ parameters.MyGetPackages }}
      NuGetVersion: ${{ parameters.NuGetVersion }}
      PublishNuGetPackagesFromArtifact: "NuGet - ${{ parameters.PublishNuGetPackages }}"
      AuthNuGetFeeds: ${{ parameters.AuthNuGetFeeds }}

  - job: Build
    dependsOn:
      - ${{ if and(eq(parameters.EnableReleaseNotes, 'true'), eq(parameters.GitHub, 'true'), startsWith(variables['Build.SourceBranch'], 'refs/tags/v')) }}:
        - GitHub_Draft_Release
    variables:
      - ${{ if ne(parameters.GitHubAuthVariableGroup, '') }}:
        - group: ${{ parameters.GitHubAuthVariableGroup }}
    strategy:
      matrix: ${{ parameters.Matrix }}
    pool:
      vmImage: $(ImageName)
    steps:
      - template: ../support/mono.yml
        parameters:
          MonoVersion: ${{ parameters.MonoVersion }}
      - ${{ if and(eq(parameters.EnableReleaseNotes, 'true'), startsWith(variables['Build.SourceBranch'], 'refs/tags/v')) }}:
        - template: ../support/download-release-notes.yml

      - template: ../support/gitversion-hack.yml
        parameters:
          BranchNameFix: ${{ parameters.BranchNameFix }}

      - template: ../support/install-dotnet.yml
        parameters:
          DotNetSdk: ${{ parameters.DotNetSdk }}
          AuthNuGetFeeds: ${{ parameters.AuthNuGetFeeds }}

      - task: DotNetCoreCLI@2
        displayName: "dotnet tool restore"
        inputs:
          command: custom
          custom: tool
          arguments: "restore"

      - task: NuGetToolInstaller@1
        displayName: "Get NuGet"
        inputs:
          versionSpec: ${{ parameters.NuGetVersion }}

      - task: NuGetCommand@2
        displayName: "Cake restore packages.config"
        inputs:
          command: custom
          feedsToUse: config
          nugetConfigPath: ${{ parameters.NuGetConfig }}
          arguments: install tools/packages.config -ExcludeVersion -OutputDirectory tools

      - task: DotNetCoreCLI@2
        displayName: 'dotnet restore'
        inputs:
          command: restore
          feedsToUse: config
          nugetConfigPath: ${{ parameters.NuGetConfig }}
          verbosityRestore: ${{ parameters.Verbosity }}

      - pwsh: .\build.ps1 -Target="${{parameters.Target}}" -Configuration="${{ parameters.Configuration }}" -Artifacts="${{ parameters.Artifacts }}" -Coverage="${{ parameters.Coverage }}" -verbosity="${{ parameters.Verbosity }}"
        displayName: 'cake ${{parameters.Target}}'

      - template: ../support/publish-artifacts.yml
        parameters:
          Configuration: ${{ parameters.Configuration }}
          Postfix: ' - $(BuildName)'
          PublishXUnit: false
          PublishVSTest: true
