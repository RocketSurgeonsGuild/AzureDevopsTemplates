parameters:
  GithubAuthVariableGroup: ""

variables:
  - group: ${{ parameters.GithubAuthVariableGroup }}

steps:
  - pwsh: |
      $parts = '$(Build.Repository.Name)' -split '/';
      Write-Host "##vso[task.setvariable variable=GitHub.Owner]$($parts[0])"
      Write-Host "##vso[task.setvariable variable=GitHub.Repository]$($parts[1])"
    displayName: "Assign GitHub.Owner and GitHub.Repository"
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

  - pwsh: |
      $token = "$(GitHub.Token)";
      $repository = "$(GitHub.Repository)";
      $owner = "$(GitHub.Owner)";
      $tag = "v$(GitVersion.MajorMinorPatch)";

      $releases = Invoke-RestMethod `
          -Uri "https://api.github.com/repos/$owner/$repository/releases" `
          -Headers @{  Authorization = "Token $token" } `
          -Method Get;

      $drafts = $releases | Sort-Object -Property created_at | where { $_.draft -and ($_.name -eq $tag) };

      foreach ($draft in $drafts) {
            Invoke-RestMethod `
                -Uri "https://api.github.com/repos/$owner/$repository/releases/$($draft.id)" `
                -Headers @{  Authorization = "Token $token" } `
                -Method Delete;
      }
    displayName: "Delete old draft releases"
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

  - pwsh: |
      $token = "$(GitHub.Token)";
      $repository = "$(GitHub.Repository)";
      $owner = "$(GitHub.Owner)";
      $tag = "v$(GitVersion.MajorMinorPatch)";

      $milestones = Invoke-RestMethod `
          -Uri "https://api.github.com/repos/$owner/$repository/milestones?state=open" `
          -Headers @{  Authorization = "Token $token" } `
          -Method Get;

      $currentMilestone = $milestones | where { $_.title -eq $tag }
      if (-not ($currentMilestone)) {
          Invoke-RestMethod `
              -Uri "https://api.github.com/repos/$owner/$repository/milestones" `
              -Headers @{  Authorization = "Token $token" } `
              -Method Post `
              -Body (@{ title = $tag; } | ConvertTo-Json)
      }
    displayName: "Ensure v$(GitVersion.MajorMinorPatch) Milestone"
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
