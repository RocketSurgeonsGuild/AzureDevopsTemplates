parameters:
  Configuration: 'Release'
  Coverage: '$(Agent.BuildDirectory)/c'
  Artifacts: $(Build.ArtifactStagingDirectory)

steps:
- task: PublishTestResults@2
  displayName: Publish Tests
  condition: always()
  inputs:
    testRunner: "XUnit"
    testResultsFiles: "$(Artifacts)/test/**/*.xml"
    testRunTitle: "XUnit Results - $(system.phaseName)"
    buildPlatform: ${{ parameters.os }}
    buildConfiguration: ${{ parameters.Configuration }}
  env:
    Artifacts: ${{ parameters.Artifacts }}

- task: PublishCodeCoverageResults@1
  displayName: Publish Code Coverage
  condition: always()
  inputs:
    codeCoverageTool: "Cobertura"
    summaryFileLocation: "$(Coverage)/solution.cobertura"
    reportDirectory: "$(Coverage)/report/"
    # failIfCoverageEmpty: "true"
  env:
    Coverage: ${{ parameters.Coverage }}

- bash: bash <(curl -s https://codecov.io/bash) -f $(Coverage)/solution.cobertura -P "$SYSTEM_PULLREQUEST_PULLREQUESTNUMBER"
  env:
    VCS_COMMIT_ID: $(Build.SourceVersion)
    VCS_BRANCH_NAME: $(Build.SourceBranchName)
    VCS_PULL_REQUEST: $(System.PullRequest.PullRequestNumber)
    CI_BUILD_URL: $(System.TeamFoundationCollectionUri)$(System.TeamProject)/_build/results?buildId=$(Build.BuildId)
    CI_BUILD_ID: $(Build.BuildNumber)-$(Agent.OS)
    CI_JOB_ID: $(System.TeamProject)-$(Build.Repository.Name)-$(Build.BuildNumber)
    CODECOV_NAME: $(Build.Repository.Name)
    CODECOV_TOKEN: $(CodeCovToken)
  displayName: Upload coverage to CodeCov
  condition: and(succeeded(), ne(variables['CodeCovToken'], ''))

- task: PublishBuildArtifacts@1
  displayName: Publish Logs
  condition: always()
  inputs:
    PathtoPublish: "$(Artifacts)/logs/"
    ArtifactName: "Logs - $(system.phaseName)"
    ArtifactType: "Container"
  env:
    Artifacts: ${{ parameters.Artifacts }}

- task: PublishBuildArtifacts@1
  displayName: Publish Nupkg Artifacts
  condition: always()
  inputs:
    PathtoPublish: "$(Artifacts)/nuget/"
    ArtifactName: "Nupkg - $(system.phaseName)"
    ArtifactType: "Container"
  env:
    Artifacts: ${{ parameters.Artifacts }}
